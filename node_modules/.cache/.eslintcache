[{"D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\index.js":"1","D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\reportWebVitals.js":"2","D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\App.js":"3","D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\components\\EmployeeDetails.js":"4","D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\pages\\Login.js":"5","D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\UI\\Table.js":"6","D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\UI\\DeleteModal.js":"7","D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\UI\\Modal.js":"8","D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\UI\\TableBody.js":"9","D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\UI\\TableHead.js":"10"},{"size":550,"mtime":1627492163317,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":885,"mtime":1627493285535,"results":"14","hashOfConfig":"12"},{"size":5500,"mtime":1627384604554,"results":"15","hashOfConfig":"12"},{"size":3399,"mtime":1627715868034,"results":"16","hashOfConfig":"12"},{"size":384,"mtime":1627363821253,"results":"17","hashOfConfig":"12"},{"size":1307,"mtime":1627365909875,"results":"18","hashOfConfig":"12"},{"size":748,"mtime":1627280735569,"results":"19","hashOfConfig":"12"},{"size":1358,"mtime":1627366818112,"results":"20","hashOfConfig":"12"},{"size":305,"mtime":1627217702539,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1pfaqbc",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\index.js",[],["44","45"],"D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\reportWebVitals.js",[],"D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\App.js",[],"D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\components\\EmployeeDetails.js",["46"],"import { Fragment, useState } from \"react\";\r\nimport Table from \"../UI/Table\";\r\nimport TableBody from \"../UI/TableBody\";\r\nimport classes from \"./EmployeeDetails.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport DeleteModal from \"../UI/DeleteModal\";\r\n\r\nconst EmployeeDetails = (props) => {\r\n  const [employees, setEmployees] = useState(props.employees);\r\n  const [isHidden, setIsHidden] = useState(true);\r\n  const [showWarning, setShowWarning] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [Id, setId] = useState(\"\");\r\n  const [removeUserId, setRemoveUserId] = useState(\"\");\r\n  const noDataFound = (\r\n    <h1 className=\"text-center text-danger\"> No Data Found!</h1>\r\n  );\r\n  const showModalHandler = () => {\r\n    setName(\"\");\r\n    setAddress(\"\");\r\n    setIsHidden(!isHidden);\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const showWarningHandler = () => {\r\n    setShowWarning(false);\r\n  };\r\n\r\n  const employeeEditHnadler = (employee) => {\r\n    setName(employee.name);\r\n    setAddress(employee.address);\r\n    setId(employee.id);\r\n    setIsEdit(true);\r\n    setIsHidden(false);\r\n  };\r\n\r\n  const employeeDeleteHandler = (employee) => {\r\n    setShowWarning(true);\r\n    setRemoveUserId(employee.id);\r\n  };\r\n\r\n  const confirmDeleteHandler = () => {\r\n    let newArr = employees.filter((item) => item.id !== removeUserId);\r\n    setEmployees(newArr);\r\n    setShowWarning(false);\r\n  };\r\n\r\n  const nameChangeHandler = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const addressChangeHandler = (event) => {\r\n    setAddress(event.target.value);\r\n  };\r\n\r\n  const employeeFormHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!isEdit) {\r\n      const employee = {\r\n        id: Math.random().toString(\"32\"),\r\n        name: name,\r\n        address: address,\r\n      };\r\n      setEmployees((prevEmployees) => {\r\n        return [employee, ...prevEmployees];\r\n      });\r\n    } else {\r\n      employees.map((employee) => {\r\n        if (employee.id === Id) {\r\n          employee.name = name;\r\n          employee.address = address;\r\n        }\r\n      });\r\n    }\r\n    setIsHidden(true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"d-flex flex-row justify-content-end\">\r\n        <button\r\n          className={`btn btn-sm btn-primary ${classes[\"align-btn\"]}`}\r\n          onClick={showModalHandler}\r\n        >\r\n          <i className=\"fas fa-plus\"></i> Add Employee\r\n        </button>\r\n      </div>\r\n      {employees.length && (\r\n        <Table>\r\n          <TableBody\r\n            employees={employees}\r\n            onEdit={employeeEditHnadler}\r\n            onDelete={employeeDeleteHandler}\r\n          />\r\n        </Table>\r\n      )}\r\n      {!employees.length && noDataFound}\r\n\r\n      {!isHidden && (\r\n        <Modal>\r\n          <form onSubmit={employeeFormHandler}>\r\n            <div>\r\n              <h3>{isEdit ? \"Edit\" : \"Add\"} Employee Details</h3>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2\">\r\n                <label htmlFor=\"name\" className={classes.label}>\r\n                  Name :{\" \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={nameChangeHandler}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-2\"></div>\r\n              <div className=\"col-md-2\">\r\n                <label htmlFor=\"address\" className={classes.label}>\r\n                  Address :\r\n                </label>\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    name=\"address\"\r\n                    value={address}\r\n                    onChange={addressChangeHandler}\r\n                    cols=\"30\"\r\n                    rows=\"2\"\r\n                  ></textarea>\r\n                  {/* <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"address\"\r\n                    value={address}\r\n                    onChange={addressChangeHandler}\r\n                  /> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div\r\n              className={`${classes[\"modal-actions\"]}  d-flex flex-row justify-content-end`}\r\n            >\r\n              <button\r\n                className={`${classes[\"modal-action-btn\"]} btn btn-sm btn-success`}\r\n                type=\"submit\"\r\n              >\r\n                <i className=\"fas fa-save\"></i> Save\r\n              </button>\r\n              <button\r\n                className={`${classes[\"modal-action-btn\"]} btn btn-sm btn-danger`}\r\n                onClick={showModalHandler}\r\n                type=\"button\"\r\n              >\r\n                <i className=\"fas fa-times\"></i> Close\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal>\r\n      )}\r\n\r\n      {showWarning && (\r\n        <DeleteModal\r\n          onDelete={confirmDeleteHandler}\r\n          onShowModal={showWarningHandler}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EmployeeDetails;\r\n","D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\pages\\Login.js",["47","48","49","50","51"],"D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\UI\\Table.js",[],"D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\UI\\DeleteModal.js",[],"D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\UI\\Modal.js",[],"D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\UI\\TableBody.js",[],"D:\\WorkSpace\\Learnings\\React\\git\\reactjs-crud-app\\src\\UI\\TableHead.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":70,"column":32,"nodeType":"58","messageId":"59","endLine":70,"endColumn":34},{"ruleId":"60","severity":1,"message":"61","line":5,"column":19,"nodeType":"62","messageId":"63","endLine":5,"endColumn":21},{"ruleId":"60","severity":1,"message":"61","line":11,"column":19,"nodeType":"62","messageId":"63","endLine":11,"endColumn":21},{"ruleId":"60","severity":1,"message":"61","line":20,"column":19,"nodeType":"62","messageId":"63","endLine":20,"endColumn":21},{"ruleId":"60","severity":1,"message":"61","line":26,"column":19,"nodeType":"62","messageId":"63","endLine":26,"endColumn":21},{"ruleId":"64","severity":1,"message":"65","line":37,"column":10,"nodeType":"66","messageId":"67","endLine":37,"endColumn":21},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'formIsValid' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]